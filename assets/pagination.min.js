let searchon = false;
// Inspired by https://github.com/matcornic/hugo-theme-learn/blob/18212e67599813e4f97ecc66ebf3f8b32f54a0b5/static/js/searchon.js#L1
var lunrIndex, pagesIndex;
function initLunr() {

    // First retrieve the index file
    $.getJSON(location.origin + location.pathname +"index.json")
        .done(function(index) { 
            pagesIndex = index;
            // Set up lunrjs by declaring the fields we use
            // Also provide their boost level for the ranking
            lunrIndex = lunr(function() {
          this.pipeline.remove(lunr.stemmer);
  this.searchPipeline.remove(lunr.stemmer);
                this.ref("name");
                this.field('name', {
		    boost: 150
                });
                this.field('description', {
		    boost: 15
                });
                this.field('details', {
		    boost: 10
                });
                this.field("maintainer", {
		    boost: 50
                });
                this.field("keywords", {
		    boost: 5
                });
				
				
                // Feed lunr with each file and let lunr actually index them
                pagesIndex.forEach(function(page) {
		    this.add(page);
                }, this);
            })
        })
        .fail(function(jqxhr, textStatus, error) {
            var err = textStatus + ", " + error;
            console.error("Error getting Hugo index file:", err);
        });
}
function runPagination(status) {
  let pages = null;
  let currentPage = null;
  let number_of_items_g = null;
  $(".current-page").text(1);
  $(".showed-items").text(10);

  $(document).ready(function () {
    // Show Lists
    $(".category-list").css({ opacity: 1 });

    var show_per_page = 10;
    var number_of_items = null;
    if (searchon) {
      number_of_items = $(`.category-card.search-item[data-status='${status}']`)
        .length;
    } else {
      number_of_items = $(".category-cards").find(`[data-status='${status}']`)
        .length;
    }
   
    $(".search-result").css("text-align", "center").css("margin-top", "40px");
    if (!number_of_items) {
      $(".pagination-item").hide();
      $(".search-result").show();
    } else {
      $(".pagination-item").show();
      $(".search-result").hide();
    }

    number_of_items_g = number_of_items;
    var number_of_pages = Math.ceil(number_of_items / show_per_page);
    pages = number_of_pages;
    $(".controls").remove();
    $("#current_page").remove();
    $("#show_per_page").remove();

    $("body").append(
      "<div class=controls></div><input id=current_page type=hidden><input id=show_per_page type=hidden>"
    );
    $("#current_page").val(0);
    $("#show_per_page").val(show_per_page);

    var navigation_html = '<a class="prev" onclick="previous()">Prev</a>';
    var current_link = 0;
    while (number_of_pages > current_link) {
      navigation_html +=
        '<a class="page" onclick="go_to_page(' +
        current_link +
        ')" longdesc="' +
        current_link +
        '">' +
        (current_link + 1) +
        "</a>";
      current_link++;
    }
    navigation_html += '<a class="next" onclick="next()">Next</a>';

    $(".controls").html(navigation_html);
    $(".controls .page:first").addClass("active_page");

    // First page
    $(".category-cards").children().removeClass("d-flex").addClass("d-none");

    if (searchon) {
      $(`.category-card.search-item[data-status='${status}']`)
        .slice(0, show_per_page)
        .addClass("d-flex");
    } else {
      $(".category-cards")
        .find(`[data-status='${status}']`)
        .slice(0, show_per_page)
        .addClass("d-flex");
    }

    // Text

    $(".number_of_pages").text(number_of_pages);
    $(".show-total").text(number_of_items);
  $(".showed-items").text(Math.min(10, number_of_items));
    if (searchon) {
      $(".showed-items").text(
        $(`.category-card.search-item.d-flex[data-status='${status}']`).length
      );
    }
  });

  {
    var prev = document.querySelector("#prev");
    var new_next = prev.cloneNode(true);
    prev.parentNode.replaceChild(new_next, prev);

    var old_next = document.querySelector("#next");
    var new_next = old_next.cloneNode(true);
    old_next.parentNode.replaceChild(new_next, old_next);
  }

  document.querySelector("#prev").addEventListener("click", previous);
  document.querySelector("#next").addEventListener("click", next, false);

  function go_to_page(page_num) {
    var show_per_page = parseInt($("#show_per_page").val(), 0);

    start_from = page_num * show_per_page;

    end_on = start_from + show_per_page;

    $(".showed-items").text(end_on);

    if (page_num + 1 == pages) {
      $(".showed-items").text(end_on - (end_on - number_of_items_g));
    }

    $(".category-cards").children().removeClass("d-flex").addClass("d-none");

    if (searchon) {
      $(`.category-card.search-item[data-status='${status}']`)
        .slice(start_from, end_on)
        .addClass("d-flex");
    } else {
      $(".category-cards")
        .find(`[data-status='${status}']`)
        .slice(start_from, end_on)
        .addClass("d-flex");
    }

    $(".page[longdesc=" + page_num + "]")
      .addClass("active_page")
      .siblings(".active_page")
      .removeClass("active_page");

    $("#current_page").val(page_num);
  }

  function previous() {
    new_page = parseInt($("#current_page").val(), 0) - 1;
    //if there is an item before the current active link run the function
    if ($(".active_page").prev(".page").length == true) {
      go_to_page(new_page);
    }

    if (new_page + 1 != 0) {
      document.querySelector(".current-page").textContent = new_page + 1;
    }
  }

  function next() {
    new_page = parseInt($("#current_page").val(), 0) + 1;
    //if there is an item after the current active link run the function
    if ($(".active_page").next(".page").length == true) {
      go_to_page(new_page);
    }

    if (new_page + 1 <= pages) {
      document.querySelector(".current-page").textContent = new_page + 1;
    }
  }
}

document.querySelectorAll(".cat-btn").forEach(function (el) {
  el.addEventListener("click", function () {
    if (this.textContent.toLowerCase() == "active") {
      runPagination("active");
    } else if (this.textContent.toLowerCase() == "experimental") {
      runPagination("experimental");
    } else if (this.textContent.toLowerCase() == "archived") {
      runPagination("archived");
    }
  });
});

runPagination("active");

function update_packages(e){
  e.preventDefault();

  $(`.category-card`).removeClass("search-item");
  
var queryTerm = ("+*" + $(".package-search__input").val().trim().replaceAll(" ", "* +*") + "* ").normalize("NFD").replace(/[\u0300-\u036f]/g, "");
    // Find the item in our index corresponding to the lunr one to have more info
  var ids = lunrIndex.search(queryTerm).map(function(result) {
            return pagesIndex.filter(function(page) {
                return page.name === result.ref;
            })[0];
        }).map(a => a.name).map(a => '#' + a);
        
for (var i = (ids.length - 1); i >= 0; i--) {
    $(ids[i]).addClass("search-item");
    $(ids[i]).prependTo('.category-cards');
} 

  searchon = true;

  if ($(".cat-btn.is-primary").text().toLowerCase() == "active") {
    runPagination("active");
  } else if ($(".cat-btn.is-primary").text().toLowerCase() == "experimental") {
    runPagination("experimental");
  } else if ($(".cat-btn.is-primary").text().toLowerCase() == "archived") {
    runPagination("archived");
  }
}

$(".package-search__submit").click(update_packages);
$(".package-search__input").on('input', update_packages);

// Let's get started
document.addEventListener("DOMContentLoaded", function(event) { 
initLunr();
});